"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.removeFile = exports.downloadFile = exports.downloadUrl = exports.isFile = exports.binary = exports.binaryPath = exports.ecRootDir = exports.getReleaseNameForCurrentPlatform = exports.arch = exports.platform = exports.getReleaseArchiveNameForCurrentPlatform = void 0;
var fs = require("fs");
var os = require("os");
var node_fetch_1 = require("node-fetch");
exports.getReleaseArchiveNameForCurrentPlatform = function () {
    return exports.getReleaseNameForCurrentPlatform() + ".tar.gz";
};
exports.platform = function () {
    var currentPlatform = os.platform();
    if (currentPlatform === "win32") {
        return "windows";
    }
    else {
        return currentPlatform;
    }
};
exports.arch = function () {
    var currentArch = os.arch();
    if (currentArch === "x32") {
        return "386";
    }
    else if (currentArch === "x64") {
        return "amd64";
    }
    return currentArch;
};
exports.getReleaseNameForCurrentPlatform = function () {
    return "ec-" + exports.platform() + "-" + exports.arch() + (exports.platform() === "windows" ? ".exe" : "");
};
exports.ecRootDir = function () {
    return __dirname + "/..";
};
exports.binaryPath = function () {
    return exports.ecRootDir() + "/bin";
};
exports.binary = function () {
    return exports.binaryPath() + "/" + exports.getReleaseNameForCurrentPlatform();
};
exports.isFile = function (path) {
    try {
        fs.statSync(path).isFile();
        return true;
    }
    catch (e) {
        return false;
    }
};
exports.downloadUrl = function (version, archiveName) {
    var releaseUrl;
    releaseUrl =
        "https://github.com/editorconfig-checker/editorconfig-checker/releases/download/";
    return releaseUrl + "/" + version + "/" + archiveName;
};
exports.downloadFile = function (url, dest) {
    if (exports.isFile(dest)) {
        fs.unlinkSync(dest);
    }
    return node_fetch_1.default(url).then(function (res) { return res.body.pipe(fs.createWriteStream(dest)); });
};
exports.removeFile = function (path) {
    fs.unlinkSync(path);
    return;
};
